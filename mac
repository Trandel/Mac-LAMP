#!/bin/sh

# Welcome to the trandel's laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine (LAMP).

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n\033[32;1m$fmt\n\033[0m" "$@"
}

append_to_log() {
  local text="$1"
  local skip_new_line="${2:-0}"

  if [ "$skip_new_line" -eq 1 ]; then
    printf "%s\n" "$text"
  else
    printf "\n%s\n" "$text"
  fi
}

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

# shellcheck disable=SC2016
# append_to_log 'export PATH="$HOME/.bin:$PATH"'

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      fancy_echo "Upgrading %s ..." "$1"
      brew upgrade "$@"
    else
      fancy_echo "Already using the latest version of %s. Skipping ..." "$1"
    fi
  else
    fancy_echo "Installing %s ..." "$1"
    brew install "$@"
  fi
}

brew_is_installed() {
  local name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$name"
}

brew_is_upgradable() {
  local name="$(brew_expand_alias "$1")"

  ! brew outdated --quiet "$name" >/dev/null
}

brew_tap() {
  brew tap "$1" 2> /dev/null
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_launchctl_restart() {
  local name="$(brew_expand_alias "$1")"
  local domain="homebrew.mxcl.$name"
  local plist="$domain.plist"

  fancy_echo "Restarting %s ..." "$1"
  mkdir -p "$HOME/Library/LaunchAgents"
  ln -sfv "/usr/local/opt/$name/$plist" "$HOME/Library/LaunchAgents"

  if launchctl list | grep -Fq "$domain"; then
    launchctl unload "$HOME/Library/LaunchAgents/$plist" >/dev/null
  fi
  launchctl load "$HOME/Library/LaunchAgents/$plist" >/dev/null
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    fancy_echo "Updating %s ..." "$1"
    gem update "$@"
  else
    fancy_echo "Installing %s ..." "$1"
    gem install "$@"
  fi
}

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_log '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_log 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update

fancy_echo "Installing Homebrew packages ..."

brew_tap 'caskroom/cask'
brew_tap 'homebrew/dupes'
brew_tap 'homebrew/homebrew-php'
brew_install_or_upgrade 'brew-cask'
brew_install_or_upgrade 'git'
brew_install_or_upgrade 'node'
brew_install_or_upgrade 'imagemagick'
brew_install_or_upgrade 'dnsmasq'
brew_install_or_upgrade 'mysql'
brew_install_or_upgrade 'phpmyadmin'

npm install -g less
npm install -g grunt-cli

fancy_echo "Updating and installing Ruby gems ..."

gem update --system
gem_install_or_update 'sass'
gem_install_or_update 'compass'

fancy_echo "Configuring apache (sudo password needed) ..."

#config apache and dnsmasq

me=$(whoami)

myConfFile="/private/etc/apache2/users/$me.conf"
mySitesDir="$HOME/Sites"

myConf="<Directory \"$mySitesDir\">
  Options Indexes MultiViews FollowSymLinks
  AllowOverride All
  Order allow,deny
  Allow from all
</Directory>

<Virtualhost *:80>
  VirtualDocumentRoot \"$mySitesDir/%1\"
  ServerName sites.dev
  ServerAlias *.dev
  UseCanonicalName Off
</Virtualhost>
"

#check the user apache config
if [ ! -f "$myConfFile" ]; then
  touch "$myConfFile"
fi

if [ ! -d "$mySitesDir" ]; then
  mkdir "$mySitesDir"
fi

sudo echo "$myConf" > $myConfFile

sudo mkdir -p "$(brew --prefix)/etc/resolver"
sudo echo 'address=/.dev/127.0.0.1' > $(brew --prefix)/etc/dnsmasq.conf
sudo echo "nameserver 127.0.0.1" > $(brew --prefix)/etc/resolver/dev

sudo sed -i 's/#LoadModule php5_module/LoadModule php5_module/g' /private/etc/apache2/httpd.conf
sudo sed -i 's/#LoadModule vhost_alias_module/LoadModule vhost_alias_module/g' /private/etc/apache2/httpd.conf

#apacheConf=`apachectl -V | grep -o 'SERVER_CONFIG_FILE=".*"'| sed 's/"//g' | sed 's/SERVER_CONFIG_FILE=//g'`
#fancy_echo $apacheConf

#config startup
brew_launchctl_restart 'mysql'
brew_launchctl_restart 'dnsmasq'

fancy_echo "Restarting apache (sudo password might be needed) ..."

sudo apachectl restart

fancy_echo "Installing tools using cask ..."

#install some tools
brew cask install google-chrome
brew cask install firefox
brew cask install sourcetree
brew cask install filezilla
brew cask install sublime-text
brew cask install adobe-creative-cloud
brew cask install adobe-photoshop-cc
brew cask install adobe-indesign-cc
brew cask install adobe-illustrator-cc
brew cask install adobe-reader
brew cask install sequel-pro
brew cask install netbeans-php

#run custom user stuff
if [ -f "$HOME/.laptop.local" ]; then
  . "$HOME/.laptop.local"
fi
